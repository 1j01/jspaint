{
	// This hides files from the file tree as well as search results.
	"files.exclude": {
		"**/node_modules": true,
		"**/out": true,
	},
	// This affects Find In Files (Ctrl+Shift+F) but also Go To File (Ctrl+P) and
	// the new Quick Search (experimental), which I've been using a lot since it was released.
	"search.exclude": {
		"**/images": true,
		"**/lib": true,
		"**/out": true,
		// The package lock file contains a lot of repetation, and is usually noise in search results.
		// You can often search with `npm ls` if you want to check if a package is installed,
		// and what depends on what.
		"package-lock.json": true,
		// Ignore localization data, which is in subfolders, but not helper scripts.
		// Any time a search matches a localized string, it matches an overwhelming number of files.
		"**/localization/*/**/*": true,
	},
	"editor.formatOnSave": true,
	"editor.insertSpaces": false,
	"editor.detectIndentation": false,
	"editor.codeActionsOnSave": {
		"source.organizeImports": "always",
	},
	"javascript.preferences.importModuleSpecifierEnding": "js",
	"typescript.preferences.importModuleSpecifierEnding": "js",
	"html.format.unformattedContentDelimiter": "<!--no_format-->",
	"[css]": {
		// The CSS in this project uses (the lack of) newlines between rules for grouping, as well as inline comments.
		// VS Code's default formatter adds newlines between all rules, and forces comments to the next line, dissociating them.
		"editor.formatOnSave": false,
	},
	"[markdown]": {
		// Formatting markdown tables automatically is cool, but doesn't allow padding cells to avoid superflous git diffs.
		// Also, VS Code's markdown formatter doesn't handle emoji in tables as well as it could.
		"editor.formatOnSave": false,
	},
	// Note: this doesn't apply to "JSON with comments" files, such as this one. That's [jsonc].
	"[json]": {
		// npm respects different indent styles, but always adds a newline at the end of package.json/package-lock.json,
		// so this avoids ping-ponging changes in git.
		// This could be applied to all files for consistency, but it may introduce noise if all files aren't formatted at once.
		"files.insertFinalNewline": true,
		// Maintaining current indentation for now, but could remove this for consistency.
		"editor.detectIndentation": true,
	},
	// Use local TypeScript version instead of the one bundled with VS Code.
	// You may need to run "TypeScript: Select TypeScript Version..." and choose "Use workspace version"
	// or that command might just set this setting for you, I'm not sure.
	// Go to a TS or JS file for the command to show up in the command palette.
	"typescript.tsdk": "node_modules/typescript/lib",
	// Prevent accidental editing.
	// This can always be overridden with the command "File: Toggle Active Editor Read-only in Session"
	"files.readonlyInclude": {
		// Electron Forge output
		"out/**": true,
		// Built/installed app (sometimes I follow error message links into the built app's code, and end up editing it by mistake)
		"**/resources/app/**": true,
		// Node.js
		"node_modules/**": true,
		"package-lock.json": true,
		// RTLCSS output
		"*.rtl.css": true,
	},
}