{
  "name": "jspaint",
  "productName": "JS Paint",
  "version": "1.0.0",
  "description": "Classic MS Paint clone with extra features",
  "keywords": [
    "paint",
    "jspaint",
    "mspaint",
    "drawing",
    "draw",
    "create",
    "image",
    "picture",
    "editor",
    "edit",
    "canvas",
    "app",
    "web-app",
    "recreation",
    "clone",
    "image-editing",
    "image-editor",
    "bitmap"
  ],
  "author": "Isaiah Odhner <isaiahodhner@gmail.com>",
  "main": "src/electron-main.js",
  "config": {
    "forge": {
      "packagerConfig": {
        "icon": "./images/icons/jspaint",
        "name": "jspaint",
        "executableName": "jspaint"
      },
      "makers": [
        {
          "name": "@electron-forge/maker-squirrel",
          "config": {
            "name": "jspaint"
          }
        },
        {
          "name": "@electron-forge/maker-zip",
          "platforms": [
            "darwin"
          ]
        },
        {
          "name": "@electron-forge/maker-deb",
          "config": {}
        },
        {
          "name": "@electron-forge/maker-rpm",
          "config": {}
        }
      ]
    }
  },
  "dependencies": {
    "@1j01/live-server": "^1.3.1",
    "electron-squirrel-startup": "^1.0.0",
    "glob": "^7.1.6",
    "lookpath": "^1.2.2",
    "rtlcss": "^3.1.2",
    "wallpaper": "^4.4.2"
  },
  "devDependencies": {
    "@electron-forge/cli": "^6.0.0-beta.65",
    "@electron-forge/maker-deb": "^6.0.0-beta.65",
    "@electron-forge/maker-rpm": "^6.0.0-beta.65",
    "@electron-forge/maker-squirrel": "^6.0.0-beta.65",
    "@electron-forge/maker-zip": "^6.0.0-beta.65",
    "concat-glob-cli": "^0.1.0",
    "cspell-cli": "^8.3.0",
    "cypress": "4.7.0",
    "cypress-image-snapshot": "^4.0.1",
    "electron": "^19.0.10",
    "electron-debug": "^3.2.0",
    "eslint": "^8.21.0",
    "npm-run-all": "^4.1.5",
    "onchange": "^7.1.0",
    "start-server-and-test": "^1.12.0",
    "workbox-cli": "^7.0.0"
  },
  "scripts": {
    "electron:start": "electron-forge start",
    "electron:debug-start": "electron-forge start --inspect-electron",
    "electron:package": "electron-forge package",
    "electron:make": "electron-forge make",
    "electron:publish": "electron-forge publish",
    "spellcheck": "cspell-cli lint .",
    "lint": "eslint src/",
    "lint-cat": "concat-glob-cli --files \"src/**/!(electron*).js\" --output concatenated-source.js && eslint --rule \"no-undef: error\" --rule \"no-unused-vars: error\" concatenated-source.js",
    "lint-cat:NOTE": "Disable the eslint comment that disables ThisExpression to use this.",
    "build-css": "rtlcss styles/layout.css styles/layout.rtl.css && rtlcss lib/os-gui/layout.css lib/os-gui/layout.rtl.css && rtlcss lib/98.css/98.custom-build.css lib/98.css/98.custom-build.rtl.css",
    "watch-css": "onchange --initial --poll 100 'styles/layout.css' 'lib/os-gui/layout.css' 'lib/98.css/98.custom-build.css' -- npm run build-css",
    "update-localization": "node ./localization/preprocess.js",
    "dev": "run-p watch-css dev:start-server workbox:watch",
    "dev:start-server": "live-server --port=1999 --ignorePattern=\"(node_modules|cypress|out)[/\\\\\\\\]|package\\.json|cypress\\.json|sw.js*|workbox-*.js*\"",
    "dev:start-server:NOTE": "@XXX: the octuple backlash ends up meaning a single backslash on Linux, two backslashes on Windows. In this case it's fine because it's in a regexp character class so the extra is redundant and doesn't cause an error.",
    "test:start-server": "live-server --port=11822 --no-browser --ignorePattern=\"(node_modules|cypress|out)[/\\\\\\\\]|package\\.json|cypress\\.json|sw.js*|workbox-*.js*\"",
    "test:start-server:NOTE": "@XXX: the octuple backlash ends up meaning a single backslash on Linux, two backslashes on Windows. In this case it's fine because it's in a regexp character class so the extra is redundant and doesn't cause an error.",
    "workbox": "workbox generateSW workbox-config.js",
    "workbox:watch": "onchange --initial --poll 100 '**' --exclude-path .gitignore --exclude '.history' --exclude 'sw.js*' --exclude 'workbox-*.js*' --filter add --filter unlink -- npm run workbox",
    "workbox:watch:@NOTE": "Filter chokidar events to only add and unlink, since the list of files to cache is the important information, and file content changing is irrelevant.",
    "workbox:watch:@NOTE2": "--verbose would be very confusing if I used it also for the RTLCSS onchange command...",
    "workbox:watch:@NOTE3": "It would be better if workbox-config.js was watched for file content changes, but it would probably require a separate `onchange` command run in parallel.",
    "workbox:watch:DOUBLY_VERBOSE": "onchange --initial --poll 100 '**' --exclude-path .gitignore --exclude .history --exclude 'sw.js*' --exclude 'workbox-*.js*' --filter add --filter unlink --verbose -- sh -c \"echo 'onchange detected {{event}} to {{file}}, re-generating service worker' && npm run workbox\"",
    "workbox:watch:DOUBLY_VERBOSE:@NOTE": "I didn't realize there was --verbose so I made my own verbose output using the template. Something like this could be better than the built-in, but it ought to handle the empty string given during the initial run.",
    "workbox:watch:BROKEN_BUILTIN": "workbox generateSW workbox-config.js --watch",
    "workbox:watch:BROKEN_BUILTIN:@NOTE": "@XXX: Doesn't ignore its own output files, so it causes an infinite loop of regenerating the files!",
    "cy:open": "cypress open",
    "cy:run": "cypress run --record",
    "cy:accept": "cypress run --env updateSnapshots=true",
    "test": "start-server-and-test test:start-server http://localhost:11822 cy:run",
    "accept": "start-server-and-test test:start-server http://localhost:11822 cy:accept"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/1j01/jspaint.git"
  },
  "bugs": {
    "url": "https://github.com/1j01/jspaint/issues"
  }
}
